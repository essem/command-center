<!DOCTYPE html>
<html>

<head>
<title>Command Center</title>
<script src="/javascripts/jquery-2.1.3.min.js"></script>
<script src="/javascripts/handlebars-v3.0.3.js"></script>
<script src="/javascripts/spin.min.js"></script>
<style>
body {
  margin: 0px;
  padding: 0px;
  background-color: #272822;
  color: white;
  font-family: sans-serif;
  font-size: 14px;
}
#control_panel {
  box-sizing: border-box;
  width: 100%;
  padding: 10px;
  background-color: #49483E;
}
.control_panel_fixed {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
}
#command_text {
  width: 100%;
  box-sizing: border-box;
  margin-bottom: 10px;
  padding: 5px 10px;
  border: 1px solid #AFAFAE;
  background-color: #272822;
  color: white;
}
#bookmark_category {
  background-color: #3E3E3C;
  padding: 3px 10px;
  margin-right: 10px;
  border: 1px solid #AFAFAE;
  color: #AFAFAE;
}
#bookmark_list {
  display: inline-block;
}
#result {
  box-sizing: border-box;
  display: block;
  width: 100%;
  padding: 10px;
  unicode-bidi: embed;
  font-family: monospace;
  white-space: pre;
}
input[type=button] {
  background-color: #3E3E3C;
  padding: 3px 10px;
  border: 1px solid #AFAFAE;
  color: #AFAFAE;
}
#control_panel select:disabled {
  color: #777;
}
#control_panel input:disabled {
  color: #777;
}
#progress {
  margin-top: 10px;
}
#progress div {
  display: inline-block;
  vertical-align: middle;
}
#progress a {
  color: white;
}
#spinner {
  position: relative;
  width: 40px;
  height: 40px;
}
</style>

<script id="bookmark_template" type="text/x-handlebars-template">
<input type="button" value="{{name}}" data-command="{{command}}" />
</script>

</head>

<body>

<div id="control_panel" class="control_panel_static">
  <form id="command_form" action="/execute">
  <input type="text" id="command_text" name="command" placeholder="Enter command here..." autofocus>
  </form>

  <select id="bookmark_category">
  <% @bookmark_categories.each do |category| %>
  <option value="<%= category %>"><%= category %></option>
  <% end %>
  </select>

  <div id="bookmark_list">
  </div>

  <div id="progress" style="display:none">
    <div id="spinner"></div>
    <div>Executing... <a href="#">Cancel</a></div>
  </div>
</div>

<div id="result"></div>

<script>
$(function () {
  var xhr = null

  function request_execution(command)
  {
    var body = $("body")[0]
    $("#result").empty()

    // it's not easy to get jqXHR's onreadystatechange event
    // just use default XMLHttpRequest

    xhr = new XMLHttpRequest()
    xhr.last_length = 0

    xhr.onreadystatechange = function() {
      if (xhr.readyState > 2) {
        var new_response = xhr.responseText.substring(xhr.last_length)
        $("#result").append(new_response)
        xhr.last_length = xhr.responseText.length
        body.scrollTop = body.scrollHeight
      }
      if (xhr.readyState == 4) {
        $("#progress").hide()
        $("#control_panel input").prop("disabled", false)
        $("#control_panel select").prop("disabled", false)
      }
    }

    xhr.open("POST", $("#command_form").attr("action"), true)
    xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded")
    xhr.send($("#command_form").serialize())

    $("#progress").show()
    $("#control_panel input").prop("disabled", true)
    $("#control_panel select").prop("disabled", true)
  }

  var bookmark_template = Handlebars.compile($("#bookmark_template").html())

  $("#command_form").on("submit", function() {
    var command_text = $("#command_text")
    command_text.select()
    request_execution(command_text.val())
    return false
  })

  $("#bookmark_category").on("change", function() {
    $("#bookmark_list").empty()
    $.ajax({
      url: "/bookmarks/" + $(this).val(),
      dataType: 'json',
    }).done(function(bookmarks) {
      $.each(bookmarks, function(index, value) {
        $("#bookmark_list").append(bookmark_template(value))
      })
    })
  })
  $("#bookmark_category").change()

  $("#bookmark_list").on("click", "input[type=button]", function() {
    var command = $(this).attr("data-command")
    var start = command.indexOf("{{")
    var end = -1
    if (start > -1) {
      command = command.substr(0, start) + command.substr(start + 2)
      end = command.indexOf("}}")
      if (end > -1) {
        command = command.substr(0, end) + command.substr(end + 2)
      } else {
        end = command.length
      }
    }
    var command_text = $("#command_text")
    command_text.val(command)
    if (end != -1) {
      command_text[0].setSelectionRange(start, end)
      command_text.focus()
    } else {
      command_text.select()
      request_execution(command)
    }
  })

  $(window).scroll(function() {
    if ($(this).scrollTop() == 0) {
      $('#control_panel').removeClass("control_panel_fixed")
    } else {
      $('#control_panel').addClass("control_panel_fixed")
    }
  })

  $("#progress a").on("click", function() {
    if (xhr && xhr.readystate != 4) {
      xhr.abort()
      $("#result").append("aborted!")
    }
    return false
  })

  var opts = {
    lines: 10, // The number of lines to draw
    length: 5, // The length of each line
    width: 4, // The line thickness
    radius: 10, // The radius of the inner circle
    corners: 1, // Corner roundness (0..1)
    color: '#fff', // #rgb or #rrggbb or array of colors
  };
  var spinner = new Spinner(opts).spin()
  $("#spinner").html(spinner.el)
})
</script>

</body>
</html>
